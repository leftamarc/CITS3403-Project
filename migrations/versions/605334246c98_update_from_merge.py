"""update from merge

Revision ID: 605334246c98
Revises: 3a0217339cea
Create Date: 2025-05-10 19:13:51.169636

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '605334246c98'
down_revision = '3a0217339cea'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('api_log',
    sa.Column('endpoint', sa.String(length=2048), nullable=False),
    sa.Column('last_called', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('endpoint')
    )
    op.create_table('game',
    sa.Column('app_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('image', sa.String(length=200), nullable=False),
    sa.Column('release_date', sa.Integer(), nullable=False),
    sa.Column('metacritic', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('app_id')
    )
    op.create_table('genre',
    sa.Column('genre_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('genre_id')
    )
    op.create_table('publisher',
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.PrimaryKeyConstraint('name')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=15), nullable=False),
    sa.Column('password_hash', sa.String(length=128), nullable=False),
    sa.Column('date_created', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username')
    )
    op.create_table('achievement',
    sa.Column('internal_name', sa.String(length=200), nullable=False),
    sa.Column('rate', sa.Integer(), nullable=False),
    sa.Column('app_id', sa.Integer(), nullable=False),
    sa.Column('display_name', sa.String(length=500), nullable=False),
    sa.Column('description', sa.String(length=500), nullable=False),
    sa.ForeignKeyConstraint(['app_id'], ['game.app_id'], ),
    sa.PrimaryKeyConstraint('internal_name', 'app_id')
    )
    op.create_table('developer_game',
    sa.Column('app_id', sa.Integer(), nullable=False),
    sa.Column('developer', sa.String(length=500), nullable=False),
    sa.ForeignKeyConstraint(['app_id'], ['game.app_id'], ),
    sa.ForeignKeyConstraint(['developer'], ['developer.name'], ),
    sa.PrimaryKeyConstraint('app_id', 'developer')
    )
    op.create_table('game_genre',
    sa.Column('app_id', sa.Integer(), nullable=False),
    sa.Column('genre_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['app_id'], ['game.app_id'], ),
    sa.ForeignKeyConstraint(['genre_id'], ['genre.genre_id'], ),
    sa.PrimaryKeyConstraint('app_id', 'genre_id')
    )
    op.create_table('publisher_game',
    sa.Column('app_id', sa.Integer(), nullable=False),
    sa.Column('publisher', sa.String(length=500), nullable=False),
    sa.ForeignKeyConstraint(['app_id'], ['game.app_id'], ),
    sa.ForeignKeyConstraint(['publisher'], ['publisher.name'], ),
    sa.PrimaryKeyConstraint('app_id', 'publisher')
    )
    op.create_table('steam_user',
    sa.Column('steam_id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=200), nullable=False),
    sa.Column('avatar_url', sa.String(length=200), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('image', sa.String(length=200), nullable=False),
    sa.Column('n_games_owned', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('steam_id')
    )
    op.create_table('user_achievement',
    sa.Column('internal_name', sa.String(length=500), nullable=False),
    sa.Column('app_id', sa.Integer(), nullable=False),
    sa.Column('steam_id', sa.Integer(), nullable=False),
    sa.Column('achieved', sa.Integer(), nullable=False),
    sa.Column('unlock_time', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['app_id'], ['game.app_id'], ),
    sa.ForeignKeyConstraint(['internal_name'], ['achievement.internal_name'], ),
    sa.ForeignKeyConstraint(['steam_id'], ['steam_user.steam_id'], ),
    sa.PrimaryKeyConstraint('internal_name', 'app_id', 'steam_id')
    )
    op.create_table('user_game',
    sa.Column('steam_id', sa.Integer(), nullable=False),
    sa.Column('app_id', sa.Integer(), nullable=False),
    sa.Column('playtime_total', sa.Integer(), nullable=False),
    sa.Column('last_played', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['app_id'], ['game.app_id'], ),
    sa.ForeignKeyConstraint(['steam_id'], ['steam_user.steam_id'], ),
    sa.PrimaryKeyConstraint('steam_id', 'app_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_game')
    op.drop_table('user_achievement')
    op.drop_table('steam_user')
    op.drop_table('publisher_game')
    op.drop_table('game_genre')
    op.drop_table('developer_game')
    op.drop_table('achievement')
    op.drop_table('user')
    op.drop_table('publisher')
    op.drop_table('genre')
    op.drop_table('game')
    op.drop_table('api_log')
    # ### end Alembic commands ###
